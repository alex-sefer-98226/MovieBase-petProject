/*
* 1. У нас загружается главная страница. Думал сделать компонент переиспользеумым и в пропсы емуу
подкидывать либо ссылку либо нжню категорию.
Этот компонент вызывает санку, которая подгружает нам фильмы
(для примера - название категории Popular).
До старта загрузки ставит в state.isLoading.popular  в true. Когда закончит - поставит в false.

Зачем я это юзаю? Так как у нас группа слайдеров - логично было бы сделать, чтобы они грузились отдельно, соответственно
в каждом слайдере в componentDidMout() мы чекаем, есть ли данное поле в state.

типа компонента Popular(сюда придёт категория){
    componentDidMount(){
        if(!state.films.[имя категории].0){
            загрузить([имя категории])
        }
    }
    render(){
        if(state.isLoading.[имя категории].0){
            показать лоадер
        }
        else{
            показать контент
        }
    }
}
--------------------------------------------------------------------------------------------------------------------------------

Это касалось главной, теперь касательно страницы фильма.
Было бы норм иметь Map, например "detailed". Там будем кешировать детали фильма.
Например
Мы можем при заходе на любуую страницу отдельного фильма создавать пару id: detailsOfFilm(id)
И, получается, так же само либо использовать готовые данные и рендерить просто
или загружать.
Плюс, добавить в Map "detailed" поле isLoading и на основании него выводить контент либо лоадер.
 */

const state = {
    // Здесь лежат все данные о предметной области, при это уже в нормализированим виде
    domain: {
        films: {
            "category": {
                allIds: [],
                byId: {}
            },
            "popular":{
                allIds: [],
                byId: {}
            }
            //тут типа следующая категория и тд
        },
    },
    // Все что качается состояния приложения
    app: {
        // Но вообще эти поля можно убрать совсем, посмотрим как будеи дальше, возможно уберем. Пока пусть будут
        isLoading: {
            "category": true,
            "nextCategory": false,
            "popular":true
        },
        detailed: {
            id: null
            // ...
            isLoading:false
        }
    },
    // Все что касается части отображения (открытие модалки, еще какая-то фигня)
    ui: {

    }
}
